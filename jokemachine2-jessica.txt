<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" type="text/css" href="./assets/style/style.css">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Oswald:wght@200;700&display=swap" rel="stylesheet">
    <script defer type="text/Javascript" src="./main.js"></script>
    <title>Ready for some jokes?</title>
</head>

<body class="container">
    <h1>Ready for some jokes?</h1>
    <div class="joke">
    </div>
    <div class="joke__button">
        <button class="button">Get new random joke</button>
    </div>
</body>

</html>


css=================
body {
  font-family: 'Oswald', sans-serif;
}

h1 {
  text-align: center;
  text-transform: uppercase;
  font-size: 60px;
  color: black;
  -webkit-text-fill-color: white;
  /* Will override color (regardless of order) */
  -webkit-text-stroke-width: 1px;
  -webkit-text-stroke-color: black;
}

.container {
  padding: 15px;
}

.joke {
  min-height: 80px;
  background-color: #e5e8ec;
  padding: 30px;
  position: relative;
  font-weight: 200;
  text-align: center;
  font-size: 24px;
  border-radius: 10px;
}

.joke::after {
  content: '';
  width: 40px;
  height: 40px;
  background-image: url("../svg/quote-right-solid.svg");
  background-repeat: no-repeat;
  position: absolute;
  bottom: -23px;
  left: 47%;
}

.joke__button {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -webkit-box-pack: center;
      -ms-flex-pack: center;
          justify-content: center;
  margin-top: 52.5px;
}

.button {
  border-radius: 10px;
  padding: 15px;
  text-transform: uppercase;
  border: 1px solid #2a9d8f;
  background-color: #2a9d8f;
  cursor: pointer;
  color: #ffffff;
  outline: 0;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
}

.button:hover {
  border: 1px solid #2a9d8f;
  color: #2a9d8f;
  background-color: #ffffff;
}

@media screen and (min-width: 1024px) {
  .joke {
    width: 50%;
    margin: 0 auto;
    display: block;
  }
}

syle.  scss=====================================
@import 'variables';
@import 'global';
@import 'responsive';

global===
body {
    font-family: 'Oswald', sans-serif;
}

h1 {
    text-align: center;
    text-transform: uppercase;
    font-size: 60px;
    color: black;
    -webkit-text-fill-color: white;
    /* Will override color (regardless of order) */
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: black;
}

.container {
    padding: $space;
}

.joke {
    min-height: 80px;
    background-color: $color-lightgrey;
    padding: $space-l;
    position: relative;
    font-weight: 200;
    text-align: center;
    font-size: 24px;
    border-radius: 10px;
    &::after {
        content: '';
        width: 40px;
        height: 40px;
        background-image: url('../svg/quote-right-solid.svg');
        background-repeat: no-repeat;
        position: absolute;
        bottom: -23px;
        left: 47%;
    }
    &__button {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: $space-xl;
    }
}

.button {
    border-radius: 10px;
    padding: $space;
    text-transform: uppercase;
    border: 1px solid $color-green;
    background-color: $color-green;
    cursor: pointer;
    color: $color-white;
    outline: 0;
    transition: all 0.3s ease-in-out;
    &:hover {
        border: 1px solid $color-green;
        color: $color-green;
        background-color: $color-white;
    }
}

responsive========
body {
    font-family: 'Oswald', sans-serif;
}

h1 {
    text-align: center;
    text-transform: uppercase;
    font-size: 60px;
    color: black;
    -webkit-text-fill-color: white;
    /* Will override color (regardless of order) */
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: black;
}

.container {
    padding: $space;
}

.joke {
    min-height: 80px;
    background-color: $color-lightgrey;
    padding: $space-l;
    position: relative;
    font-weight: 200;
    text-align: center;
    font-size: 24px;
    border-radius: 10px;
    &::after {
        content: '';
        width: 40px;
        height: 40px;
        background-image: url('../svg/quote-right-solid.svg');
        background-repeat: no-repeat;
        position: absolute;
        bottom: -23px;
        left: 47%;
    }
    &__button {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: $space-xl;
    }
}

.button {
    border-radius: 10px;
    padding: $space;
    text-transform: uppercase;
    border: 1px solid $color-green;
    background-color: $color-green;
    cursor: pointer;
    color: $color-white;
    outline: 0;
    transition: all 0.3s ease-in-out;
    &:hover {
        border: 1px solid $color-green;
        color: $color-green;
        background-color: $color-white;
    }
}

============variables.SCSS
// Colors
$color-white: #ffffff;
$color-lightgrey: #e5e8ec;
$color-green: #2a9d8f;
// Space
$space: 15px;
$space-s: $space * 0.5;
$space-m: $space * 1.5;
$space-l: $space * 2;
$space-xl: $space * 3.5;

main js =================
const container = document.querySelector('.container');
const generateJokeButton = document.querySelector('.button');

const fetchData = (endpoint) => {
    try {
        const API_URL = `https://icanhazdadjoke.com${endpoint}`;
        const options = {
            method: "GET",
            headers: { "Accept": "application/json" } // fixes “No Access-Control-Allow-Origin header”
        };
        fetch(API_URL, options)
            .then(response => response.json())
            .then(data => {
                let jokeResults = document.querySelector('.joke');
                jokeResults.innerHTML = data.joke;
            })

    } catch (error) {
        console.log(error);
    }
}

const fetchRandomJoke = async() => {
    let getJoke = await fetchData('');
    return getJoke;
}
fetchRandomJoke();


generateJokeButton.addEventListener('click', () => {
    fetchRandomJoke();
});
